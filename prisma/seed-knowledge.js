const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

async function main() {
  console.log('üå± –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏...');

  // –°–æ–∑–¥–∞–Ω–∏–µ –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏–π
  console.log('üìö –°–æ–∑–¥–∞–Ω–∏–µ –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏–π...');
  
  const minzdrav = await prisma.methodology.create({
    data: {
      name: '–°—Ç–∞–Ω–¥–∞—Ä—Ç—ã –ú–∏–Ω–∑–¥—Ä–∞–≤–∞ –†–§',
      type: 'MINZDRAV_RF',
      description: '–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ –Ω–æ—Ä–º–∞—Ç–∏–≤—ã –ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–∞ –∑–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏',
      organization: '–ú–∏–Ω–∑–¥—Ä–∞–≤ –†–§',
      country: '–†–æ—Å—Å–∏—è',
      version: '2024',
      source: 'https://www.rosminzdrav.ru',
      isActive: true
    }
  });

  const usStandards = await prisma.methodology.create({
    data: {
      name: '–ê–º–µ—Ä–∏–∫–∞–Ω—Å–∫–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã',
      type: 'US_STANDARDS',
      description: '–°—Ç–∞–Ω–¥–∞—Ä—Ç—ã CDC –∏ NIH (–°–®–ê)',
      organization: 'CDC, NIH',
      country: '–°–®–ê',
      version: '2024',
      source: 'https://www.cdc.gov',
      isActive: true
    }
  });

  const euStandards = await prisma.methodology.create({
    data: {
      name: '–ï–≤—Ä–æ–ø–µ–π—Å–∫–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã',
      type: 'EU_STANDARDS',
      description: '–°—Ç–∞–Ω–¥–∞—Ä—Ç—ã ESC –∏ EASL (–ï–≤—Ä–æ–ø–∞)',
      organization: 'ESC, EASL',
      country: '–ï–≤—Ä–æ–ø–∞',
      version: '2024',
      source: 'https://www.escardio.org',
      isActive: true
    }
  });

  console.log('‚úÖ –ú–µ—Ç–æ–¥–æ–ª–æ–≥–∏–∏ —Å–æ–∑–¥–∞–Ω—ã');

  // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∏–ø–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è: –û–±—â–∏–π –∞–Ω–∞–ª–∏–∑ –∫—Ä–æ–≤–∏
  console.log('ü©∏ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∏–ø–æ–≤ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π...');
  
  const bloodTest = await prisma.studyType.create({
    data: {
      name: '–û–±—â–∏–π –∞–Ω–∞–ª–∏–∑ –∫—Ä–æ–≤–∏',
      nameEn: 'Complete Blood Count (CBC)',
      code: 'CBC-001',
      category: '–ì–µ–º–∞—Ç–æ–ª–æ–≥–∏—è',
      description: '–û—Å–Ω–æ–≤–Ω–æ–µ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ, –ø–æ–∑–≤–æ–ª—è—é—â–µ–µ –æ—Ü–µ–Ω–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Ñ–æ—Ä–º–µ–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∫—Ä–æ–≤–∏: —ç—Ä–∏—Ç—Ä–æ—Ü–∏—Ç–æ–≤, –ª–µ–π–∫–æ—Ü–∏—Ç–æ–≤, —Ç—Ä–æ–º–±–æ—Ü–∏—Ç–æ–≤.',
      clinicalSignificance: '–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∞–Ω–µ–º–∏–∏, –≤–æ—Å–ø–∞–ª–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤, –∏–Ω—Ñ–µ–∫—Ü–∏–π, –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π –∫—Ä–æ–≤–∏ –∏ –æ—Ü–µ–Ω–∫–∏ –æ–±—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–¥–æ—Ä–æ–≤—å—è.',
      preparation: '–°–¥–∞–µ—Ç—Å—è –Ω–∞—Ç–æ—â–∞–∫, –∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ —É—Ç—Ä–æ–º. –ü–æ—Å–ª–µ–¥–Ω–∏–π –ø—Ä–∏–µ–º –ø–∏—â–∏ –∑–∞ 8-12 —á–∞—Å–æ–≤ –¥–æ –∞–Ω–∞–ª–∏–∑–∞. –ú–æ–∂–Ω–æ –ø–∏—Ç—å –≤–æ–¥—É.',
      biomaterial: '–í–µ–Ω–æ–∑–Ω–∞—è –∫—Ä–æ–≤—å',
      isActive: true
    }
  });

  // –ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –¥–ª—è –æ–±—â–µ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –∫—Ä–æ–≤–∏
  const hemoglobin = await prisma.indicator.create({
    data: {
      studyTypeId: bloodTest.id,
      name: '–ì–µ–º–æ–≥–ª–æ–±–∏–Ω',
      nameEn: 'Hemoglobin',
      code: 'HGB',
      shortName: 'HGB',
      unit: '–≥/–ª',
      description: '–ë–µ–ª–æ–∫ —ç—Ä–∏—Ç—Ä–æ—Ü–∏—Ç–æ–≤, –ø–µ—Ä–µ–Ω–æ—Å—è—â–∏–π –∫–∏—Å–ª–æ—Ä–æ–¥ –æ—Ç –ª–µ–≥–∫–∏—Ö –∫ —Ç–∫–∞–Ω—è–º –∏ —É–≥–ª–µ–∫–∏—Å–ª—ã–π –≥–∞–∑ –æ–±—Ä–∞—Ç–Ω–æ.',
      clinicalSignificance: '–û—Å–Ω–æ–≤–Ω–æ–π –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∞–Ω–µ–º–∏–∏ –∏ –æ—Ü–µ–Ω–∫–∏ –∫–∏—Å–ª–æ—Ä–æ–¥–æ—Çransporting —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –∫—Ä–æ–≤–∏.',
      increasedMeaning: '–ü–æ–ª–∏—Ü–∏—Ç–µ–º–∏—è, –æ–±–µ–∑–≤–æ–∂–∏–≤–∞–Ω–∏–µ, –ø—Ä–µ–±—ã–≤–∞–Ω–∏–µ –Ω–∞ –±–æ–ª—å—à–æ–π –≤—ã—Å–æ—Ç–µ, –∫—É—Ä–µ–Ω–∏–µ, –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è –ª–µ–≥–∫–∏—Ö.',
      decreasedMeaning: '–ê–Ω–µ–º–∏—è —Ä–∞–∑–ª–∏—á–Ω–æ–≥–æ –ø—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏—è, –∫—Ä–æ–≤–æ–ø–æ—Ç–µ—Ä—è, –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è –∫–æ—Å—Ç–Ω–æ–≥–æ –º–æ–∑–≥–∞, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ–∫ –∂–µ–ª–µ–∑–∞, –≤–∏—Ç–∞–º–∏–Ω–∞ B12 –∏–ª–∏ —Ñ–æ–ª–∏–µ–≤–æ–π –∫–∏—Å–ª–æ—Ç—ã.',
      synonyms: JSON.stringify(['Hb', 'HGB', '–ì–µ–º–æ–≥–ª–æ–±–∏–Ω']),
      isActive: true
    }
  });

  // –ù–æ—Ä–º–∞—Ç–∏–≤—ã –¥–ª—è –≥–µ–º–æ–≥–ª–æ–±–∏–Ω–∞
  await prisma.referenceRange.createMany({
    data: [
      // –ú–∏–Ω–∑–¥—Ä–∞–≤ –†–§
      {
        indicatorId: hemoglobin.id,
        methodologyId: minzdrav.id,
        gender: 'male',
        ageGroupMin: 18,
        ageGroupMax: 65,
        minValue: 130,
        maxValue: 170,
        optimalMin: 140,
        optimalMax: 160,
        criticalLow: 80,
        criticalHigh: 200,
        note: '–î–ª—è –º—É–∂—á–∏–Ω 18-65 –ª–µ—Ç',
        isActive: true
      },
      {
        indicatorId: hemoglobin.id,
        methodologyId: minzdrav.id,
        gender: 'female',
        ageGroupMin: 18,
        ageGroupMax: 65,
        minValue: 120,
        maxValue: 150,
        optimalMin: 125,
        optimalMax: 145,
        criticalLow: 70,
        criticalHigh: 180,
        note: '–î–ª—è –∂–µ–Ω—â–∏–Ω 18-65 –ª–µ—Ç',
        isActive: true
      },
      // –ê–º–µ—Ä–∏–∫–∞–Ω—Å–∫–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã
      {
        indicatorId: hemoglobin.id,
        methodologyId: usStandards.id,
        gender: 'male',
        ageGroupMin: 18,
        ageGroupMax: null,
        minValue: 135,
        maxValue: 175,
        optimalMin: 140,
        optimalMax: 170,
        criticalLow: 85,
        criticalHigh: 195,
        note: 'CDC standards for adult males',
        isActive: true
      },
      {
        indicatorId: hemoglobin.id,
        methodologyId: usStandards.id,
        gender: 'female',
        ageGroupMin: 18,
        ageGroupMax: null,
        minValue: 120,
        maxValue: 155,
        optimalMin: 125,
        optimalMax: 150,
        criticalLow: 75,
        criticalHigh: 175,
        note: 'CDC standards for adult females',
        isActive: true
      },
      // –ï–≤—Ä–æ–ø–µ–π—Å–∫–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã
      {
        indicatorId: hemoglobin.id,
        methodologyId: euStandards.id,
        gender: 'male',
        ageGroupMin: 18,
        ageGroupMax: null,
        minValue: 130,
        maxValue: 180,
        optimalMin: 140,
        optimalMax: 170,
        note: 'ESC guidelines for adult males',
        isActive: true
      },
      {
        indicatorId: hemoglobin.id,
        methodologyId: euStandards.id,
        gender: 'female',
        ageGroupMin: 18,
        ageGroupMax: null,
        minValue: 115,
        maxValue: 160,
        optimalMin: 120,
        optimalMax: 150,
        note: 'ESC guidelines for adult females',
        isActive: true
      }
    ]
  });

  // –≠—Ä–∏—Ç—Ä–æ—Ü–∏—Ç—ã
  const erythrocytes = await prisma.indicator.create({
    data: {
      studyTypeId: bloodTest.id,
      name: '–≠—Ä–∏—Ç—Ä–æ—Ü–∏—Ç—ã',
      nameEn: 'Red Blood Cells',
      code: 'RBC',
      shortName: 'RBC',
      unit: '√ó10¬π¬≤/–ª',
      description: '–ö—Ä–∞—Å–Ω—ã–µ –∫—Ä–æ–≤—è–Ω—ã–µ –∫–ª–µ—Ç–∫–∏, —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ –≥–µ–º–æ–≥–ª–æ–±–∏–Ω –∏ –ø–µ—Ä–µ–Ω–æ—Å—è—â–∏–µ –∫–∏—Å–ª–æ—Ä–æ–¥.',
      clinicalSignificance: '–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∞–Ω–µ–º–∏–π, –ø–æ–ª–∏—Ü–∏—Ç–µ–º–∏–∏ –∏ –¥—Ä—É–≥–∏—Ö –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π –∫—Ä–æ–≤–∏.',
      increasedMeaning: '–ü–æ–ª–∏—Ü–∏—Ç–µ–º–∏—è, –æ–±–µ–∑–≤–æ–∂–∏–≤–∞–Ω–∏–µ, –≥–∏–ø–æ–∫—Å–∏—è, –∫—É—Ä–µ–Ω–∏–µ.',
      decreasedMeaning: '–ê–Ω–µ–º–∏—è, –∫—Ä–æ–≤–æ–ø–æ—Ç–µ—Ä—è, –≥–µ–º–æ–ª–∏–∑, –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è –∫–æ—Å—Ç–Ω–æ–≥–æ –º–æ–∑–≥–∞.',
      isActive: true
    }
  });

  await prisma.referenceRange.createMany({
    data: [
      {
        indicatorId: erythrocytes.id,
        methodologyId: minzdrav.id,
        gender: 'male',
        ageGroupMin: 18,
        ageGroupMax: null,
        minValue: 4.0,
        maxValue: 5.5,
        optimalMin: 4.5,
        optimalMax: 5.0,
        isActive: true
      },
      {
        indicatorId: erythrocytes.id,
        methodologyId: minzdrav.id,
        gender: 'female',
        ageGroupMin: 18,
        ageGroupMax: null,
        minValue: 3.5,
        maxValue: 5.0,
        optimalMin: 4.0,
        optimalMax: 4.7,
        isActive: true
      }
    ]
  });

  // –õ–µ–π–∫–æ—Ü–∏—Ç—ã
  const leukocytes = await prisma.indicator.create({
    data: {
      studyTypeId: bloodTest.id,
      name: '–õ–µ–π–∫–æ—Ü–∏—Ç—ã',
      nameEn: 'White Blood Cells',
      code: 'WBC',
      shortName: 'WBC',
      unit: '√ó10‚Åπ/–ª',
      description: '–ë–µ–ª—ã–µ –∫—Ä–æ–≤—è–Ω—ã–µ –∫–ª–µ—Ç–∫–∏, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—â–∏–µ –∏–º–º—É–Ω–Ω—É—é –∑–∞—â–∏—Ç—É –æ—Ä–≥–∞–Ω–∏–∑–º–∞.',
      clinicalSignificance: '–í–∞–∂–Ω–µ–π—à–∏–π –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –∏–º–º—É–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∏–Ω—Ñ–µ–∫—Ü–∏–π, –≤–æ—Å–ø–∞–ª–µ–Ω–∏–π –∏ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π –∫—Ä–æ–≤–∏.',
      increasedMeaning: '–ò–Ω—Ñ–µ–∫—Ü–∏–∏, –≤–æ—Å–ø–∞–ª–µ–Ω–∏–µ, –ª–µ–π–∫–æ–∑, —Å—Ç—Ä–µ—Å—Å, —Ñ–∏–∑–∏—á–µ—Å–∫–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞.',
      decreasedMeaning: '–í–∏—Ä—É—Å–Ω—ã–µ –∏–Ω—Ñ–µ–∫—Ü–∏–∏, –∏–º–º—É–Ω–æ–¥–µ—Ñ–∏—Ü–∏—Ç—ã, –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏–µ —Ä–∞–¥–∏–∞—Ü–∏–∏, –∞—É—Ç–æ–∏–º–º—É–Ω–Ω—ã–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è.',
      isActive: true
    }
  });

  await prisma.referenceRange.createMany({
    data: [
      {
        indicatorId: leukocytes.id,
        methodologyId: minzdrav.id,
        gender: 'all',
        ageGroupMin: 18,
        ageGroupMax: null,
        minValue: 4.0,
        maxValue: 9.0,
        optimalMin: 5.0,
        optimalMax: 8.0,
        criticalLow: 2.0,
        criticalHigh: 25.0,
        isActive: true
      },
      {
        indicatorId: leukocytes.id,
        methodologyId: usStandards.id,
        gender: 'all',
        ageGroupMin: 18,
        ageGroupMax: null,
        minValue: 4.5,
        maxValue: 11.0,
        criticalLow: 2.5,
        criticalHigh: 30.0,
        isActive: true
      }
    ]
  });

  // –¢—Ä–æ–º–±–æ—Ü–∏—Ç—ã
  const platelets = await prisma.indicator.create({
    data: {
      studyTypeId: bloodTest.id,
      name: '–¢—Ä–æ–º–±–æ—Ü–∏—Ç—ã',
      nameEn: 'Platelets',
      code: 'PLT',
      shortName: 'PLT',
      unit: '√ó10‚Åπ/–ª',
      description: '–ö—Ä–æ–≤—è–Ω—ã–µ –ø–ª–∞—Å—Ç–∏–Ω–∫–∏, —É—á–∞—Å—Ç–≤—É—é—â–∏–µ –≤ —Å–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–∏ –∫—Ä–æ–≤–∏.',
      clinicalSignificance: '–û—Ü–µ–Ω–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –≥–µ–º–æ—Å—Ç–∞–∑–∞, —Ä–∏—Å–∫–∞ –∫—Ä–æ–≤–æ—Ç–µ—á–µ–Ω–∏–π –∏ —Ç—Ä–æ–º–±–æ–∑–æ–≤.',
      increasedMeaning: '–¢—Ä–æ–º–±–æ—Ü–∏—Ç–æ–∑, –º–∏–µ–ª–æ–ø—Ä–æ–ª–∏—Ñ–µ—Ä–∞—Ç–∏–≤–Ω—ã–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è, –≤–æ—Å–ø–∞–ª–µ–Ω–∏–µ, –ø–æ—Å–ª–µ –æ–ø–µ—Ä–∞—Ü–∏–π.',
      decreasedMeaning: '–¢—Ä–æ–º–±–æ—Ü–∏—Ç–æ–ø–µ–Ω–∏—è, –∞—É—Ç–æ–∏–º–º—É–Ω–Ω—ã–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è, –ª–µ–π–∫–æ–∑, –ø—Ä–∏–µ–º –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –ª–µ–∫–∞—Ä—Å—Ç–≤.',
      isActive: true
    }
  });

  await prisma.referenceRange.createMany({
    data: [
      {
        indicatorId: platelets.id,
        methodologyId: minzdrav.id,
        gender: 'all',
        ageGroupMin: 18,
        ageGroupMax: null,
        minValue: 150,
        maxValue: 400,
        optimalMin: 180,
        optimalMax: 350,
        criticalLow: 50,
        criticalHigh: 1000,
        isActive: true
      }
    ]
  });

  console.log('‚úÖ –û–±—â–∏–π –∞–Ω–∞–ª–∏–∑ –∫—Ä–æ–≤–∏ —Å–æ–∑–¥–∞–Ω');

  // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∏–ø–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è: –ë–∏–æ—Ö–∏–º–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –∫—Ä–æ–≤–∏
  const biochemistry = await prisma.studyType.create({
    data: {
      name: '–ë–∏–æ—Ö–∏–º–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –∫—Ä–æ–≤–∏',
      nameEn: 'Blood Chemistry Panel',
      code: 'BIO-001',
      category: '–ë–∏–æ—Ö–∏–º–∏—è',
      description: '–ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ, –ø–æ–∑–≤–æ–ª—è—é—â–µ–µ –æ—Ü–µ–Ω–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ—Ä–≥–∞–Ω–æ–≤ –∏ —Å–∏—Å—Ç–µ–º –æ—Ä–≥–∞–Ω–∏–∑–º–∞.',
      clinicalSignificance: '–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π –ø–µ—á–µ–Ω–∏, –ø–æ—á–µ–∫, –ø–æ–¥–∂–µ–ª—É–¥–æ—á–Ω–æ–π –∂–µ–ª–µ–∑—ã, —Å–µ—Ä–¥—Ü–∞, –æ—Ü–µ–Ω–∫–∞ –æ–±–º–µ–Ω–∞ –≤–µ—â–µ—Å—Ç–≤.',
      preparation: '–°—Ç—Ä–æ–≥–æ –Ω–∞—Ç–æ—â–∞–∫! –ü–æ—Å–ª–µ–¥–Ω–∏–π –ø—Ä–∏–µ–º –ø–∏—â–∏ –∑–∞ 12 —á–∞—Å–æ–≤ –¥–æ –∞–Ω–∞–ª–∏–∑–∞. –ò—Å–∫–ª—é—á–∏—Ç—å –∞–ª–∫–æ–≥–æ–ª—å –∑–∞ 24 —á–∞—Å–∞.',
      biomaterial: '–í–µ–Ω–æ–∑–Ω–∞—è –∫—Ä–æ–≤—å',
      isActive: true
    }
  });

  // –ì–ª—é–∫–æ–∑–∞
  const glucose = await prisma.indicator.create({
    data: {
      studyTypeId: biochemistry.id,
      name: '–ì–ª—é–∫–æ–∑–∞',
      nameEn: 'Glucose',
      code: 'GLU',
      shortName: '–ì–ª—é–∫–æ–∑–∞',
      unit: '–º–º–æ–ª—å/–ª',
      description: '–û—Å–Ω–æ–≤–Ω–æ–π –∏—Å—Ç–æ—á–Ω–∏–∫ —ç–Ω–µ—Ä–≥–∏–∏ –¥–ª—è –∫–ª–µ—Ç–æ–∫ –æ—Ä–≥–∞–Ω–∏–∑–º–∞.',
      clinicalSignificance: '–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∞—Ö–∞—Ä–Ω–æ–≥–æ –¥–∏–∞–±–µ—Ç–∞, –ø—Ä–µ–¥–¥–∏–∞–±–µ—Ç–∞, –≥–∏–ø–æ–≥–ª–∏–∫–µ–º–∏–∏.',
      increasedMeaning: '–°–∞—Ö–∞—Ä–Ω—ã–π –¥–∏–∞–±–µ—Ç, —Å—Ç—Ä–µ—Å—Å, –ø–∞–Ω–∫—Ä–µ–∞—Ç–∏—Ç, –ø—Ä–∏–µ–º –∫–æ—Ä—Ç–∏–∫–æ—Å—Ç–µ—Ä–æ–∏–¥–æ–≤, –∞–∫—Ä–æ–º–µ–≥–∞–ª–∏—è.',
      decreasedMeaning: '–ì–∏–ø–æ–≥–ª–∏–∫–µ–º–∏—è, –∏–Ω—Å—É–ª–∏–Ω–æ–º–∞, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ—Å—Ç—å –Ω–∞–¥–ø–æ—á–µ—á–Ω–∏–∫–æ–≤, –¥–ª–∏—Ç–µ–ª—å–Ω–æ–µ –≥–æ–ª–æ–¥–∞–Ω–∏–µ.',
      synonyms: JSON.stringify(['–°–∞—Ö–∞—Ä –∫—Ä–æ–≤–∏', 'Blood Sugar', 'GLU']),
      isActive: true
    }
  });

  await prisma.referenceRange.createMany({
    data: [
      {
        indicatorId: glucose.id,
        methodologyId: minzdrav.id,
        gender: 'all',
        ageGroupMin: 18,
        ageGroupMax: null,
        minValue: 3.3,
        maxValue: 5.5,
        optimalMin: 4.0,
        optimalMax: 5.0,
        criticalLow: 2.2,
        criticalHigh: 15.0,
        note: '–ù–∞—Ç–æ—â–∞–∫',
        isActive: true
      },
      {
        indicatorId: glucose.id,
        methodologyId: usStandards.id,
        gender: 'all',
        ageGroupMin: 18,
        ageGroupMax: null,
        minValue: 3.9,
        maxValue: 6.1,
        optimalMin: 4.0,
        optimalMax: 5.6,
        criticalLow: 2.5,
        criticalHigh: 20.0,
        note: 'Fasting glucose - ADA standards',
        isActive: true
      }
    ]
  });

  // –•–æ–ª–µ—Å—Ç–µ—Ä–∏–Ω
  const cholesterol = await prisma.indicator.create({
    data: {
      studyTypeId: biochemistry.id,
      name: '–•–æ–ª–µ—Å—Ç–µ—Ä–∏–Ω –æ–±—â–∏–π',
      nameEn: 'Total Cholesterol',
      code: 'CHOL',
      shortName: '–•–°',
      unit: '–º–º–æ–ª—å/–ª',
      description: '–ñ–∏—Ä–æ–ø–æ–¥–æ–±–Ω–æ–µ –≤–µ—â–µ—Å—Ç–≤–æ, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –∫–ª–µ—Ç–æ—á–Ω—ã—Ö –º–µ–º–±—Ä–∞–Ω –∏ —Å–∏–Ω—Ç–µ–∑–∞ –≥–æ—Ä–º–æ–Ω–æ–≤.',
      clinicalSignificance: '–û—Ü–µ–Ω–∫–∞ —Ä–∏—Å–∫–∞ –∞—Ç–µ—Ä–æ—Å–∫–ª–µ—Ä–æ–∑–∞ –∏ —Å–µ—Ä–¥–µ—á–Ω–æ-—Å–æ—Å—É–¥–∏—Å—Ç—ã—Ö –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π.',
      increasedMeaning: '–ê—Ç–µ—Ä–æ—Å–∫–ª–µ—Ä–æ–∑, –æ–∂–∏—Ä–µ–Ω–∏–µ, –≥–∏–ø–æ—Ç–∏—Ä–µ–æ–∑, —Å–∞—Ö–∞—Ä–Ω—ã–π –¥–∏–∞–±–µ—Ç, –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è –ø–µ—á–µ–Ω–∏.',
      decreasedMeaning: '–ì–∏–ø–µ—Ä—Ç–∏—Ä–µ–æ–∑, –≥–æ–ª–æ–¥–∞–Ω–∏–µ, —Ç—è–∂–µ–ª—ã–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è –ø–µ—á–µ–Ω–∏, –∞–Ω–µ–º–∏—è.',
      isActive: true
    }
  });

  await prisma.referenceRange.createMany({
    data: [
      {
        indicatorId: cholesterol.id,
        methodologyId: minzdrav.id,
        gender: 'all',
        ageGroupMin: 18,
        ageGroupMax: null,
        minValue: 3.0,
        maxValue: 5.2,
        optimalMin: 3.5,
        optimalMax: 5.0,
        criticalHigh: 7.8,
        note: '–û–ø—Ç–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –¥–ª—è –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∏ –°–°–ó',
        isActive: true
      },
      {
        indicatorId: cholesterol.id,
        methodologyId: usStandards.id,
        gender: 'all',
        ageGroupMin: 18,
        ageGroupMax: null,
        minValue: 0,
        maxValue: 5.17,
        optimalMin: 3.0,
        optimalMax: 5.0,
        note: 'AHA/ACC guidelines - desirable level',
        isActive: true
      },
      {
        indicatorId: cholesterol.id,
        methodologyId: euStandards.id,
        gender: 'all',
        ageGroupMin: 18,
        ageGroupMax: null,
        minValue: 0,
        maxValue: 5.0,
        optimalMin: 3.0,
        optimalMax: 4.5,
        note: 'ESC guidelines',
        isActive: true
      }
    ]
  });

  // –ö—Ä–µ–∞—Ç–∏–Ω–∏–Ω
  const creatinine = await prisma.indicator.create({
    data: {
      studyTypeId: biochemistry.id,
      name: '–ö—Ä–µ–∞—Ç–∏–Ω–∏–Ω',
      nameEn: 'Creatinine',
      code: 'CREA',
      shortName: '–ö—Ä–µ–∞—Ç',
      unit: '–º–∫–º–æ–ª—å/–ª',
      description: '–ü—Ä–æ–¥—É–∫—Ç —Ä–∞—Å–ø–∞–¥–∞ –∫—Ä–µ–∞—Ç–∏–Ω–∞, –≤—ã–¥–µ–ª—è—é—â–∏–π—Å—è –ø–æ—á–∫–∞–º–∏.',
      clinicalSignificance: '–û—Å–Ω–æ–≤–Ω–æ–π –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ—á–µ–∫.',
      increasedMeaning: '–ü–æ—á–µ—á–Ω–∞—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ—Å—Ç—å, –æ–±–µ–∑–≤–æ–∂–∏–≤–∞–Ω–∏–µ, –∞–∫—Ä–æ–º–µ–≥–∞–ª–∏—è, –≥–∏–ø–µ—Ä—Ç–∏—Ä–µ–æ–∑.',
      decreasedMeaning: '–°–Ω–∏–∂–µ–Ω–∏–µ –º—ã—à–µ—á–Ω–æ–π –º–∞—Å—Å—ã, –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å, –≥–æ–ª–æ–¥–∞–Ω–∏–µ.',
      isActive: true
    }
  });

  await prisma.referenceRange.createMany({
    data: [
      {
        indicatorId: creatinine.id,
        methodologyId: minzdrav.id,
        gender: 'male',
        ageGroupMin: 18,
        ageGroupMax: null,
        minValue: 62,
        maxValue: 115,
        optimalMin: 70,
        optimalMax: 100,
        criticalHigh: 500,
        isActive: true
      },
      {
        indicatorId: creatinine.id,
        methodologyId: minzdrav.id,
        gender: 'female',
        ageGroupMin: 18,
        ageGroupMax: null,
        minValue: 53,
        maxValue: 97,
        optimalMin: 60,
        optimalMax: 90,
        criticalHigh: 450,
        isActive: true
      }
    ]
  });

  // –ê–õ–¢
  const alt = await prisma.indicator.create({
    data: {
      studyTypeId: biochemistry.id,
      name: '–ê–ª–∞–Ω–∏–Ω–∞–º–∏–Ω–æ—Ç—Ä–∞–Ω—Å—Ñ–µ—Ä–∞–∑–∞',
      nameEn: 'Alanine Aminotransferase',
      code: 'ALT',
      shortName: '–ê–õ–¢',
      unit: '–ï–¥/–ª',
      description: '–§–µ—Ä–º–µ–Ω—Ç –ø–µ—á–µ–Ω–∏, –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –µ–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è.',
      clinicalSignificance: '–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π –ø–µ—á–µ–Ω–∏ –∏ –∂–µ–ª—á–µ–≤—ã–≤–æ–¥—è—â–∏—Ö –ø—É—Ç–µ–π.',
      increasedMeaning: '–ì–µ–ø–∞—Ç–∏—Ç, —Ü–∏—Ä—Ä–æ–∑, —Ç–æ–∫—Å–∏—á–µ—Å–∫–æ–µ –ø–æ—Ä–∞–∂–µ–Ω–∏–µ –ø–µ—á–µ–Ω–∏, –∏–Ω—Ñ–∞—Ä–∫—Ç –º–∏–æ–∫–∞—Ä–¥–∞.',
      decreasedMeaning: '–¢—è–∂–µ–ª—ã–π –Ω–µ–∫—Ä–æ–∑ –ø–µ—á–µ–Ω–∏, –¥–µ—Ñ–∏—Ü–∏—Ç –≤–∏—Ç–∞–º–∏–Ω–∞ B6.',
      isActive: true
    }
  });

  await prisma.referenceRange.createMany({
    data: [
      {
        indicatorId: alt.id,
        methodologyId: minzdrav.id,
        gender: 'male',
        ageGroupMin: 18,
        ageGroupMax: null,
        minValue: 0,
        maxValue: 41,
        optimalMin: 10,
        optimalMax: 35,
        isActive: true
      },
      {
        indicatorId: alt.id,
        methodologyId: minzdrav.id,
        gender: 'female',
        ageGroupMin: 18,
        ageGroupMax: null,
        minValue: 0,
        maxValue: 31,
        optimalMin: 10,
        optimalMax: 28,
        isActive: true
      }
    ]
  });

  // –ê–°–¢
  const ast = await prisma.indicator.create({
    data: {
      studyTypeId: biochemistry.id,
      name: '–ê—Å–ø–∞—Ä—Ç–∞—Ç–∞–º–∏–Ω–æ—Ç—Ä–∞–Ω—Å—Ñ–µ—Ä–∞–∑–∞',
      nameEn: 'Aspartate Aminotransferase',
      code: 'AST',
      shortName: '–ê–°–¢',
      unit: '–ï–¥/–ª',
      description: '–§–µ—Ä–º–µ–Ω—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π—Å—è –≤ –∫–ª–µ—Ç–∫–∞—Ö –ø–µ—á–µ–Ω–∏ –∏ —Å–µ—Ä–¥—Ü–∞.',
      clinicalSignificance: '–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π –ø–µ—á–µ–Ω–∏ –∏ –º–∏–æ–∫–∞—Ä–¥–∞.',
      increasedMeaning: '–ò–Ω—Ñ–∞—Ä–∫—Ç –º–∏–æ–∫–∞—Ä–¥–∞, –≥–µ–ø–∞—Ç–∏—Ç, —Ü–∏—Ä—Ä–æ–∑, –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏–µ –º—ã—à—Ü.',
      decreasedMeaning: '–¢—è–∂–µ–ª—ã–π –Ω–µ–∫—Ä–æ–∑ –ø–µ—á–µ–Ω–∏.',
      isActive: true
    }
  });

  await prisma.referenceRange.createMany({
    data: [
      {
        indicatorId: ast.id,
        methodologyId: minzdrav.id,
        gender: 'male',
        ageGroupMin: 18,
        ageGroupMax: null,
        minValue: 0,
        maxValue: 37,
        optimalMin: 10,
        optimalMax: 33,
        isActive: true
      },
      {
        indicatorId: ast.id,
        methodologyId: minzdrav.id,
        gender: 'female',
        ageGroupMin: 18,
        ageGroupMax: null,
        minValue: 0,
        maxValue: 31,
        optimalMin: 10,
        optimalMax: 28,
        isActive: true
      }
    ]
  });

  console.log('‚úÖ –ë–∏–æ—Ö–∏–º–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –∫—Ä–æ–≤–∏ —Å–æ–∑–¥–∞–Ω');

  // –ì–æ—Ä–º–æ–Ω—ã —â–∏—Ç–æ–≤–∏–¥–Ω–æ–π –∂–µ–ª–µ–∑—ã
  const thyroid = await prisma.studyType.create({
    data: {
      name: '–ì–æ—Ä–º–æ–Ω—ã —â–∏—Ç–æ–≤–∏–¥–Ω–æ–π –∂–µ–ª–µ–∑—ã',
      nameEn: 'Thyroid Hormones',
      code: 'THY-001',
      category: '–≠–Ω–¥–æ–∫—Ä–∏–Ω–æ–ª–æ–≥–∏—è',
      description: '–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –≥–æ—Ä–º–æ–Ω–æ–≤ —â–∏—Ç–æ–≤–∏–¥–Ω–æ–π –∂–µ–ª–µ–∑—ã –¥–ª—è –æ—Ü–µ–Ω–∫–∏ –µ–µ —Ñ—É–Ω–∫—Ü–∏–∏.',
      clinicalSignificance: '–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –≥–∏–ø–µ—Ä- –∏ –≥–∏–ø–æ—Ç–∏—Ä–µ–æ–∑–∞, –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π —â–∏—Ç–æ–≤–∏–¥–Ω–æ–π –∂–µ–ª–µ–∑—ã.',
      preparation: '–£—Ç—Ä–æ–º –Ω–∞—Ç–æ—â–∞–∫. –ó–∞ 2-3 –¥–Ω—è –¥–æ –∞–Ω–∞–ª–∏–∑–∞ –∏—Å–∫–ª—é—á–∏—Ç—å –ø—Ä–∏–µ–º –π–æ–¥—Å–æ–¥–µ—Ä–∂–∞—â–∏—Ö –ø—Ä–µ–ø–∞—Ä–∞—Ç–æ–≤.',
      biomaterial: '–í–µ–Ω–æ–∑–Ω–∞—è –∫—Ä–æ–≤—å',
      isActive: true
    }
  });

  const tsh = await prisma.indicator.create({
    data: {
      studyTypeId: thyroid.id,
      name: '–¢–∏—Ä–µ–æ—Ç—Ä–æ–ø–Ω—ã–π –≥–æ—Ä–º–æ–Ω',
      nameEn: 'Thyroid Stimulating Hormone',
      code: 'TSH',
      shortName: '–¢–¢–ì',
      unit: '–º–ú–ï/–ª',
      description: '–ì–æ—Ä–º–æ–Ω –≥–∏–ø–æ—Ñ–∏–∑–∞, —Ä–µ–≥—É–ª–∏—Ä—É—é—â–∏–π —Ñ—É–Ω–∫—Ü–∏—é —â–∏—Ç–æ–≤–∏–¥–Ω–æ–π –∂–µ–ª–µ–∑—ã.',
      clinicalSignificance: '–û—Å–Ω–æ–≤–Ω–æ–π –º–∞—Ä–∫–µ—Ä —Ñ—É–Ω–∫—Ü–∏–∏ —â–∏—Ç–æ–≤–∏–¥–Ω–æ–π –∂–µ–ª–µ–∑—ã.',
      increasedMeaning: '–ì–∏–ø–æ—Ç–∏—Ä–µ–æ–∑, —Ç–∏—Ä–µ–æ–∏–¥–∏—Ç –•–∞—à–∏–º–æ—Ç–æ, –æ–ø—É—Ö–æ–ª—å –≥–∏–ø–æ—Ñ–∏–∑–∞.',
      decreasedMeaning: '–ì–∏–ø–µ—Ä—Ç–∏—Ä–µ–æ–∑, –¥–∏—Ñ—Ñ—É–∑–Ω—ã–π —Ç–æ–∫—Å–∏—á–µ—Å–∫–∏–π –∑–æ–±, –∞–¥–µ–Ω–æ–º–∞ —â–∏—Ç–æ–≤–∏–¥–Ω–æ–π –∂–µ–ª–µ–∑—ã.',
      isActive: true
    }
  });

  await prisma.referenceRange.createMany({
    data: [
      {
        indicatorId: tsh.id,
        methodologyId: minzdrav.id,
        gender: 'all',
        ageGroupMin: 18,
        ageGroupMax: null,
        minValue: 0.4,
        maxValue: 4.0,
        optimalMin: 0.5,
        optimalMax: 2.5,
        criticalHigh: 10.0,
        isActive: true
      },
      {
        indicatorId: tsh.id,
        methodologyId: usStandards.id,
        gender: 'all',
        ageGroupMin: 18,
        ageGroupMax: null,
        minValue: 0.5,
        maxValue: 5.0,
        optimalMin: 0.5,
        optimalMax: 2.5,
        note: 'ATA guidelines',
        isActive: true
      }
    ]
  });

  console.log('‚úÖ –ì–æ—Ä–º–æ–Ω—ã —â–∏—Ç–æ–≤–∏–¥–Ω–æ–π –∂–µ–ª–µ–∑—ã —Å–æ–∑–¥–∞–Ω—ã');

  console.log('üéâ –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞!');
  console.log('üìä –°–æ–∑–¥–∞–Ω–æ:');
  console.log(`   - 3 –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏–∏ (–ú–∏–Ω–∑–¥—Ä–∞–≤ –†–§, –°–®–ê, –ï–≤—Ä–æ–ø–∞)`);
  console.log(`   - 3 —Ç–∏–ø–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π`);
  console.log(`   - 11 –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π`);
  console.log(`   - ${await prisma.referenceRange.count()} –Ω–æ—Ä–º–∞—Ç–∏–≤–Ω—ã—Ö –¥–∏–∞–ø–∞–∑–æ–Ω–æ–≤`);
}

main()
  .catch((e) => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π:', e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  });
