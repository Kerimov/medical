const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

// –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏
const MEDICAL_SOURCES = {
  uptodate: {
    name: 'UpToDate',
    url: 'https://www.uptodate.com/',
    description: 'Evidence-based clinical decision support resource'
  },
  rucml: {
    name: '–†–æ—Å—Å–∏–π—Å–∫–æ–µ –æ–±—â–µ—Å—Ç–≤–æ –∫–ª–∏–Ω–∏—á–µ—Å–∫–∏—Ö –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö –¥–∏–∞–≥–Ω–æ—Å—Ç–æ–≤',
    url: 'https://rucml.ru/',
    description: '–†–æ—Å—Å–∏–π—Å–∫–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏'
  },
  msd: {
    name: 'MSD Manuals',
    url: 'https://www.msdmanuals.com/ru-ru/professional',
    description: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞'
  },
  medscape: {
    name: 'Medscape',
    url: 'https://reference.medscape.com/',
    description: '–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –∏ –Ω–æ–≤–æ—Å—Ç–∏'
  },
  ncbi: {
    name: 'NCBI',
    url: 'https://www.ncbi.nlm.nih.gov/',
    description: '–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ü–µ–Ω—Ç—Ä –±–∏–æ—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏'
  },
  pubmed: {
    name: 'PubMed',
    url: 'https://pubmed.ncbi.nlm.nih.gov/',
    description: '–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π'
  }
};

async function main() {
  console.log('üå± –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π —Å –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–º–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º–∏...');

  // –°–æ–∑–¥–∞–µ–º –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏–∏ —Å –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º–∏
  const methodologies = [
    {
      name: '–ú–∏–Ω–∑–¥—Ä–∞–≤ –†–§ - –ö–ª–∏–Ω–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏',
      type: 'MINZDRAV_RF',
      description: '–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ –∫–ª–∏–Ω–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–∞ –∑–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏',
      organization: '–ú–∏–Ω–∑–¥—Ä–∞–≤ –†–§',
      country: '–†–æ—Å—Å–∏—è',
      version: '2024',
      effectiveFrom: new Date('2024-01-01'),
      source: 'https://cr.minzdrav.gov.ru/',
      sources: {
        primary: MEDICAL_SOURCES.rucml,
        references: [MEDICAL_SOURCES.uptodate, MEDICAL_SOURCES.msd]
      },
      lastUpdated: new Date()
    },
    {
      name: 'UpToDate Clinical Guidelines',
      type: 'US_STANDARDS',
      description: 'Evidence-based clinical decision support from UpToDate',
      organization: 'Wolters Kluwer',
      country: '–°–®–ê',
      version: '2024',
      effectiveFrom: new Date('2024-01-01'),
      source: 'https://www.uptodate.com/',
      sources: {
        primary: MEDICAL_SOURCES.uptodate,
        references: [MEDICAL_SOURCES.pubmed, MEDICAL_SOURCES.ncbi]
      },
      lastUpdated: new Date()
    },
    {
      name: 'MSD Professional Manuals',
      type: 'US_STANDARDS',
      description: 'Professional medical reference from MSD Manuals',
      organization: 'Merck & Co.',
      country: '–°–®–ê',
      version: '2024',
      effectiveFrom: new Date('2024-01-01'),
      source: 'https://www.msdmanuals.com/ru-ru/professional',
      sources: {
        primary: MEDICAL_SOURCES.msd,
        references: [MEDICAL_SOURCES.medscape, MEDICAL_SOURCES.pubmed]
      },
      lastUpdated: new Date()
    },
    {
      name: 'ESC Clinical Practice Guidelines',
      type: 'EU_STANDARDS',
      description: 'European Society of Cardiology clinical practice guidelines',
      organization: 'ESC',
      country: '–ï–≤—Ä–æ–ø–∞',
      version: '2023',
      effectiveFrom: new Date('2023-01-01'),
      source: 'https://www.escardio.org/Guidelines',
      sources: {
        primary: MEDICAL_SOURCES.uptodate,
        references: [MEDICAL_SOURCES.pubmed, MEDICAL_SOURCES.ncbi]
      },
      lastUpdated: new Date()
    },
    {
      name: 'WHO Laboratory Standards',
      type: 'WHO',
      description: 'World Health Organization laboratory standards and guidelines',
      organization: 'WHO',
      country: '–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ',
      version: '2023',
      effectiveFrom: new Date('2023-01-01'),
      source: 'https://www.who.int/',
      sources: {
        primary: MEDICAL_SOURCES.ncbi,
        references: [MEDICAL_SOURCES.pubmed, MEDICAL_SOURCES.uptodate]
      },
      lastUpdated: new Date()
    }
  ];

  console.log('üìã –°–æ–∑–¥–∞–Ω–∏–µ –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏–π...');
  const createdMethodologies = [];
  for (const methodology of methodologies) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–∞—è –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏—è
    const existing = await prisma.methodology.findFirst({
      where: { 
        name: methodology.name,
        type: methodology.type
      }
    });
    
    let created;
    if (existing) {
      created = await prisma.methodology.update({
        where: { id: existing.id },
        data: methodology
      });
    } else {
      created = await prisma.methodology.create({
        data: methodology
      });
    }
    
    createdMethodologies.push(created);
    console.log(`‚úÖ –ú–µ—Ç–æ–¥–æ–ª–æ–≥–∏—è: ${created.name}`);
  }

  // –°–æ–∑–¥–∞–µ–º —Ç–∏–ø—ã –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π —Å –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º–∏
  const studyTypes = [
    {
      name: '–û–±—â–∏–π –∞–Ω–∞–ª–∏–∑ –∫—Ä–æ–≤–∏',
      nameEn: 'Complete Blood Count (CBC)',
      code: 'CBC',
      category: '–ì–µ–º–∞—Ç–æ–ª–æ–≥–∏—è',
      description: '–ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∫–ª–µ—Ç–æ—á–Ω–æ–≥–æ —Å–æ—Å—Ç–∞–≤–∞ –∫—Ä–æ–≤–∏',
      clinicalSignificance: '–û—Å–Ω–æ–≤–Ω–æ–π —Å–∫—Ä–∏–Ω–∏–Ω–≥-—Ç–µ—Å—Ç –¥–ª—è –æ—Ü–µ–Ω–∫–∏ –æ–±—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–¥–æ—Ä–æ–≤—å—è, –≤—ã—è–≤–ª–µ–Ω–∏—è –∞–Ω–µ–º–∏–∏, –∏–Ω—Ñ–µ–∫—Ü–∏–π, –≤–æ—Å–ø–∞–ª–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤',
      preparation: '–ö—Ä–æ–≤—å —Å–¥–∞–µ—Ç—Å—è –Ω–∞—Ç–æ—â–∞–∫, —É—Ç—Ä–æ–º. –ó–∞ 24 —á–∞—Å–∞ –∏—Å–∫–ª—é—á–∏—Ç—å –∞–ª–∫–æ–≥–æ–ª—å, —Ñ–∏–∑–∏—á–µ—Å–∫–∏–µ –Ω–∞–≥—Ä—É–∑–∫–∏',
      biomaterial: '–í–µ–Ω–æ–∑–Ω–∞—è –∫—Ä–æ–≤—å —Å –≠–î–¢–ê',
      sources: {
        primary: MEDICAL_SOURCES.uptodate,
        references: [MEDICAL_SOURCES.msd, MEDICAL_SOURCES.rucml, MEDICAL_SOURCES.medscape],
        lastChecked: new Date().toISOString()
      },
      lastUpdated: new Date()
    },
    {
      name: '–ë–∏–æ—Ö–∏–º–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –∫—Ä–æ–≤–∏',
      nameEn: 'Blood Chemistry Panel',
      code: 'BCP',
      category: '–ö–ª–∏–Ω–∏—á–µ—Å–∫–∞—è —Ö–∏–º–∏—è',
      description: '–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –±–∏–æ—Ö–∏–º–∏—á–µ—Å–∫–∏—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π –∫—Ä–æ–≤–∏',
      clinicalSignificance: '–û—Ü–µ–Ω–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–µ—á–µ–Ω–∏, –ø–æ—á–µ–∫, –æ–±–º–µ–Ω–∞ –≤–µ—â–µ—Å—Ç–≤, —ç–ª–µ–∫—Ç—Ä–æ–ª–∏—Ç–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞',
      preparation: '–ö—Ä–æ–≤—å —Å–¥–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–≥–æ –Ω–∞—Ç–æ—â–∞–∫ (8-12 —á–∞—Å–æ–≤ –≥–æ–ª–æ–¥–∞–Ω–∏—è). –£—Ç—Ä–æ–º, –¥–æ –ø—Ä–∏–µ–º–∞ –ª–µ–∫–∞—Ä—Å—Ç–≤',
      biomaterial: '–í–µ–Ω–æ–∑–Ω–∞—è –∫—Ä–æ–≤—å –±–µ–∑ –∞–Ω—Ç–∏–∫–æ–∞–≥—É–ª—è–Ω—Ç–∞',
      sources: {
        primary: MEDICAL_SOURCES.msd,
        references: [MEDICAL_SOURCES.uptodate, MEDICAL_SOURCES.rucml, MEDICAL_SOURCES.pubmed],
        lastChecked: new Date().toISOString()
      },
      lastUpdated: new Date()
    },
    {
      name: '–û–±—â–∏–π –∞–Ω–∞–ª–∏–∑ –º–æ—á–∏',
      nameEn: 'Urinalysis',
      code: 'UA',
      category: '–ö–ª–∏–Ω–∏—á–µ—Å–∫–∞—è —Ö–∏–º–∏—è',
      description: '–ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —Ñ–∏–∑–∏–∫–æ-—Ö–∏–º–∏—á–µ—Å–∫–∏—Ö —Å–≤–æ–π—Å—Ç–≤ –º–æ—á–∏',
      clinicalSignificance: '–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π –ø–æ—á–µ–∫, –º–æ—á–µ–≤—ã–≤–æ–¥—è—â–∏—Ö –ø—É—Ç–µ–π, –æ–±–º–µ–Ω–∞ –≤–µ—â–µ—Å—Ç–≤',
      preparation: '–£—Ç—Ä–µ–Ω–Ω—è—è –ø–æ—Ä—Ü–∏—è –º–æ—á–∏, —Ç—â–∞—Ç–µ–ª—å–Ω—ã–π —Ç—É–∞–ª–µ—Ç –Ω–∞—Ä—É–∂–Ω—ã—Ö –ø–æ–ª–æ–≤—ã—Ö –æ—Ä–≥–∞–Ω–æ–≤',
      biomaterial: '–°—Ä–µ–¥–Ω—è—è –ø–æ—Ä—Ü–∏—è —É—Ç—Ä–µ–Ω–Ω–µ–π –º–æ—á–∏',
      sources: {
        primary: MEDICAL_SOURCES.rucml,
        references: [MEDICAL_SOURCES.uptodate, MEDICAL_SOURCES.msd, MEDICAL_SOURCES.medscape],
        lastChecked: new Date().toISOString()
      },
      lastUpdated: new Date()
    }
  ];

  console.log('üß™ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∏–ø–æ–≤ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π...');
  const createdStudyTypes = [];
  for (const studyType of studyTypes) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π —Ç–∏–ø –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
    const existing = await prisma.studyType.findFirst({
      where: { 
        name: studyType.name
      }
    });
    
    let created;
    if (existing) {
      created = await prisma.studyType.update({
        where: { id: existing.id },
        data: studyType
      });
    } else {
      created = await prisma.studyType.create({
        data: studyType
      });
    }
    
    createdStudyTypes.push(created);
    console.log(`‚úÖ –¢–∏–ø –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è: ${created.name}`);
  }

  // –°–æ–∑–¥–∞–µ–º –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ —Å –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º–∏
  const indicators = [
    // –ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –æ–±—â–µ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –∫—Ä–æ–≤–∏
    {
      studyTypeId: createdStudyTypes[0].id,
      name: '–ì–µ–º–æ–≥–ª–æ–±–∏–Ω',
      nameEn: 'Hemoglobin',
      code: 'HGB',
      shortName: 'Hb',
      unit: '–≥/–ª',
      description: '–ë–µ–ª–æ–∫, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∂–µ–ª–µ–∑–æ, –ø–µ—Ä–µ–Ω–æ—Å—è—â–∏–π –∫–∏—Å–ª–æ—Ä–æ–¥ –≤ –∫—Ä–æ–≤–∏',
      clinicalSignificance: '–û—Å–Ω–æ–≤–Ω–æ–π –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∞–Ω–µ–º–∏–∏ –∏ –ø–æ–ª–∏—Ü–∏—Ç–µ–º–∏–∏',
      increasedMeaning: '–ü–æ–ª–∏—Ü–∏—Ç–µ–º–∏—è, –æ–±–µ–∑–≤–æ–∂–∏–≤–∞–Ω–∏–µ, —Ö—Ä–æ–Ω–∏—á–µ—Å–∫–∞—è –≥–∏–ø–æ–∫—Å–∏—è',
      decreasedMeaning: '–ê–Ω–µ–º–∏—è —Ä–∞–∑–ª–∏—á–Ω–æ–≥–æ –≥–µ–Ω–µ–∑–∞, –∫—Ä–æ–≤–æ–ø–æ—Ç–µ—Ä—è, –≥–µ–º–æ–ª–∏–∑',
      relatedConditions: ['–ê–Ω–µ–º–∏—è', '–ü–æ–ª–∏—Ü–∏—Ç–µ–º–∏—è', '–û–±–µ–∑–≤–æ–∂–∏–≤–∞–Ω–∏–µ'],
      synonyms: ['Hb', 'HGB', '–ì–µ–º–æ–≥–ª–æ–±–∏–Ω'],
      sources: {
        primary: MEDICAL_SOURCES.uptodate,
        references: [MEDICAL_SOURCES.msd, MEDICAL_SOURCES.rucml, MEDICAL_SOURCES.pubmed],
        lastChecked: new Date().toISOString()
      },
      lastUpdated: new Date()
    },
    {
      studyTypeId: createdStudyTypes[0].id,
      name: '–≠—Ä–∏—Ç—Ä–æ—Ü–∏—Ç—ã',
      nameEn: 'Red Blood Cells',
      code: 'RBC',
      shortName: '–≠—Ä',
      unit: '√ó10¬π¬≤/–ª',
      description: '–ö—Ä–∞—Å–Ω—ã–µ –∫—Ä–æ–≤—è–Ω—ã–µ –∫–ª–µ—Ç–∫–∏, –ø–µ—Ä–µ–Ω–æ—Å—è—â–∏–µ –∫–∏—Å–ª–æ—Ä–æ–¥',
      clinicalSignificance: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ —ç—Ä–∏—Ç—Ä–æ—Ü–∏—Ç–∞—Ä–Ω–æ–≥–æ —Ä–æ—Å—Ç–∫–∞ –∫—Ä–æ–≤–∏',
      increasedMeaning: '–ü–æ–ª–∏—Ü–∏—Ç–µ–º–∏—è, –æ–±–µ–∑–≤–æ–∂–∏–≤–∞–Ω–∏–µ, —Ö—Ä–æ–Ω–∏—á–µ—Å–∫–∞—è –≥–∏–ø–æ–∫—Å–∏—è',
      decreasedMeaning: '–ê–Ω–µ–º–∏—è, –∫—Ä–æ–≤–æ–ø–æ—Ç–µ—Ä—è, –≥–µ–º–æ–ª–∏–∑, —É–≥–Ω–µ—Ç–µ–Ω–∏–µ –∫–æ—Å—Ç–Ω–æ–≥–æ –º–æ–∑–≥–∞',
      relatedConditions: ['–ê–Ω–µ–º–∏—è', '–ü–æ–ª–∏—Ü–∏—Ç–µ–º–∏—è', '–ì–µ–º–æ–ª–∏–∑'],
      synonyms: ['RBC', '–≠—Ä–∏—Ç—Ä–æ—Ü–∏—Ç—ã', '–ö—Ä–∞—Å–Ω—ã–µ –∫—Ä–æ–≤—è–Ω—ã–µ –∫–ª–µ—Ç–∫–∏'],
      sources: {
        primary: MEDICAL_SOURCES.msd,
        references: [MEDICAL_SOURCES.uptodate, MEDICAL_SOURCES.rucml, MEDICAL_SOURCES.medscape],
        lastChecked: new Date().toISOString()
      },
      lastUpdated: new Date()
    },
    {
      studyTypeId: createdStudyTypes[0].id,
      name: '–õ–µ–π–∫–æ—Ü–∏—Ç—ã',
      nameEn: 'White Blood Cells',
      code: 'WBC',
      shortName: '–õ—Ü',
      unit: '√ó10‚Åπ/–ª',
      description: '–ë–µ–ª—ã–µ –∫—Ä–æ–≤—è–Ω—ã–µ –∫–ª–µ—Ç–∫–∏, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—â–∏–µ –∏–º–º—É–Ω–Ω—É—é –∑–∞—â–∏—Ç—É',
      clinicalSignificance: '–û—Ü–µ–Ω–∫–∞ –∏–º–º—É–Ω–Ω–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞, –≤—ã—è–≤–ª–µ–Ω–∏–µ –≤–æ—Å–ø–∞–ª–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤',
      increasedMeaning: '–ò–Ω—Ñ–µ–∫—Ü–∏–∏, –≤–æ—Å–ø–∞–ª–µ–Ω–∏–µ, –ª–µ–π–∫–æ–∑, —Å—Ç—Ä–µ—Å—Å, —Ñ–∏–∑–∏—á–µ—Å–∫–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞',
      decreasedMeaning: '–£–≥–Ω–µ—Ç–µ–Ω–∏–µ –∫–æ—Å—Ç–Ω–æ–≥–æ –º–æ–∑–≥–∞, –≤–∏—Ä—É—Å–Ω—ã–µ –∏–Ω—Ñ–µ–∫—Ü–∏–∏, –∞—É—Ç–æ–∏–º–º—É–Ω–Ω—ã–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è',
      relatedConditions: ['–ò–Ω—Ñ–µ–∫—Ü–∏–∏', '–í–æ—Å–ø–∞–ª–µ–Ω–∏–µ', '–õ–µ–π–∫–æ–∑', '–ê–≥—Ä–∞–Ω—É–ª–æ—Ü–∏—Ç–æ–∑'],
      synonyms: ['WBC', '–õ–µ–π–∫–æ—Ü–∏—Ç—ã', '–ë–µ–ª—ã–µ –∫—Ä–æ–≤—è–Ω—ã–µ –∫–ª–µ—Ç–∫–∏'],
      sources: {
        primary: MEDICAL_SOURCES.rucml,
        references: [MEDICAL_SOURCES.uptodate, MEDICAL_SOURCES.msd, MEDICAL_SOURCES.pubmed],
        lastChecked: new Date().toISOString()
      },
      lastUpdated: new Date()
    },
    // –ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –±–∏–æ—Ö–∏–º–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
    {
      studyTypeId: createdStudyTypes[1].id,
      name: '–ì–ª—é–∫–æ–∑–∞',
      nameEn: 'Glucose',
      code: 'GLU',
      shortName: '–ì–ª—é–∫–æ–∑–∞',
      unit: '–º–º–æ–ª—å/–ª',
      description: '–û—Å–Ω–æ–≤–Ω–æ–π —É–≥–ª–µ–≤–æ–¥ –∫—Ä–æ–≤–∏, –∏—Å—Ç–æ—á–Ω–∏–∫ —ç–Ω–µ—Ä–≥–∏–∏ –¥–ª—è –∫–ª–µ—Ç–æ–∫',
      clinicalSignificance: '–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∞—Ö–∞—Ä–Ω–æ–≥–æ –¥–∏–∞–±–µ—Ç–∞, –Ω–∞—Ä—É—à–µ–Ω–∏–π —É–≥–ª–µ–≤–æ–¥–Ω–æ–≥–æ –æ–±–º–µ–Ω–∞',
      increasedMeaning: '–°–∞—Ö–∞—Ä–Ω—ã–π –¥–∏–∞–±–µ—Ç, —Å—Ç—Ä–µ—Å—Å, –ø–∞–Ω–∫—Ä–µ–∞—Ç–∏—Ç, —ç–Ω–¥–æ–∫—Ä–∏–Ω–Ω—ã–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è',
      decreasedMeaning: '–ì–∏–ø–æ–≥–ª–∏–∫–µ–º–∏—è, –ø–µ—Ä–µ–¥–æ–∑–∏—Ä–æ–≤–∫–∞ –∏–Ω—Å—É–ª–∏–Ω–∞, –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è –ø–µ—á–µ–Ω–∏',
      relatedConditions: ['–°–∞—Ö–∞—Ä–Ω—ã–π –¥–∏–∞–±–µ—Ç', '–ì–∏–ø–æ–≥–ª–∏–∫–µ–º–∏—è', '–ú–µ—Ç–∞–±–æ–ª–∏—á–µ—Å–∫–∏–π —Å–∏–Ω–¥—Ä–æ–º'],
      synonyms: ['–ì–ª—é–∫–æ–∑–∞', 'GLU', '–°–∞—Ö–∞—Ä –∫—Ä–æ–≤–∏'],
      sources: {
        primary: MEDICAL_SOURCES.uptodate,
        references: [MEDICAL_SOURCES.msd, MEDICAL_SOURCES.rucml, MEDICAL_SOURCES.pubmed],
        lastChecked: new Date().toISOString()
      },
      lastUpdated: new Date()
    },
    {
      studyTypeId: createdStudyTypes[1].id,
      name: '–û–±—â–∏–π —Ö–æ–ª–µ—Å—Ç–µ—Ä–∏–Ω',
      nameEn: 'Total Cholesterol',
      code: 'CHOL',
      shortName: '–•–°',
      unit: '–º–º–æ–ª—å/–ª',
      description: '–û–±—â–∏–π —Ö–æ–ª–µ—Å—Ç–µ—Ä–∏–Ω –≤ —Å—ã–≤–æ—Ä–æ—Ç–∫–µ –∫—Ä–æ–≤–∏',
      clinicalSignificance: '–û—Ü–µ–Ω–∫–∞ —Ä–∏—Å–∫–∞ —Å–µ—Ä–¥–µ—á–Ω–æ-—Å–æ—Å—É–¥–∏—Å—Ç—ã—Ö –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π',
      increasedMeaning: '–ì–∏–ø–µ—Ä—Ö–æ–ª–µ—Å—Ç–µ—Ä–∏–Ω–µ–º–∏—è, –∞—Ç–µ—Ä–æ—Å–∫–ª–µ—Ä–æ–∑, –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è –ø–µ—á–µ–Ω–∏',
      decreasedMeaning: '–ì–∏–ø–æ—Ö–æ–ª–µ—Å—Ç–µ—Ä–∏–Ω–µ–º–∏—è, –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è –ø–µ—á–µ–Ω–∏, –≥–∏–ø–µ—Ä—Ç–∏—Ä–µ–æ–∑',
      relatedConditions: ['–ê—Ç–µ—Ä–æ—Å–∫–ª–µ—Ä–æ–∑', '–ò–ë–°', '–ì–∏–ø–µ—Ä–ª–∏–ø–∏–¥–µ–º–∏—è'],
      synonyms: ['–•–æ–ª–µ—Å—Ç–µ—Ä–∏–Ω', 'CHOL', '–û–±—â–∏–π —Ö–æ–ª–µ—Å—Ç–µ—Ä–∏–Ω'],
      sources: {
        primary: MEDICAL_SOURCES.msd,
        references: [MEDICAL_SOURCES.uptodate, MEDICAL_SOURCES.rucml, MEDICAL_SOURCES.medscape],
        lastChecked: new Date().toISOString()
      },
      lastUpdated: new Date()
    }
  ];

  console.log('üìä –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π...');
  const createdIndicators = [];
  for (const indicator of indicators) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å
    const existing = await prisma.indicator.findFirst({
      where: { 
        studyTypeId: indicator.studyTypeId,
        name: indicator.name
      }
    });
    
    let created;
    if (existing) {
      created = await prisma.indicator.update({
        where: { id: existing.id },
        data: indicator
      });
    } else {
      created = await prisma.indicator.create({
        data: indicator
      });
    }
    
    createdIndicators.push(created);
    console.log(`‚úÖ –ü–æ–∫–∞–∑–∞—Ç–µ–ª—å: ${created.name}`);
  }

  // –°–æ–∑–¥–∞–µ–º —Ä–µ—Ñ–µ—Ä–µ–Ω—Å–Ω—ã–µ –¥–∏–∞–ø–∞–∑–æ–Ω—ã
  const referenceRanges = [
    // –†–µ—Ñ–µ—Ä–µ–Ω—Å–Ω—ã–µ –¥–∏–∞–ø–∞–∑–æ–Ω—ã –¥–ª—è –≥–µ–º–æ–≥–ª–æ–±–∏–Ω–∞
    {
      indicatorId: createdIndicators[0].id,
      methodologyId: createdMethodologies[0].id, // –ú–∏–Ω–∑–¥—Ä–∞–≤ –†–§
      ageGroupMin: 18,
      ageGroupMax: 60,
      gender: 'male',
      minValue: 130,
      maxValue: 160,
      optimalMin: 140,
      optimalMax: 150,
      criticalLow: 80,
      criticalHigh: 200,
      note: '–ù–æ—Ä–º–∞ –¥–ª—è –≤–∑—Ä–æ—Å–ª—ã—Ö –º—É–∂—á–∏–Ω –ø–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º –ú–∏–Ω–∑–¥—Ä–∞–≤–∞ –†–§',
      conditions: { fasting: false, timeOfDay: 'any' }
    },
    {
      indicatorId: createdIndicators[0].id,
      methodologyId: createdMethodologies[0].id, // –ú–∏–Ω–∑–¥—Ä–∞–≤ –†–§
      ageGroupMin: 18,
      ageGroupMax: 60,
      gender: 'female',
      minValue: 120,
      maxValue: 140,
      optimalMin: 125,
      optimalMax: 135,
      criticalLow: 70,
      criticalHigh: 180,
      note: '–ù–æ—Ä–º–∞ –¥–ª—è –≤–∑—Ä–æ—Å–ª—ã—Ö –∂–µ–Ω—â–∏–Ω –ø–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º –ú–∏–Ω–∑–¥—Ä–∞–≤–∞ –†–§',
      conditions: { fasting: false, timeOfDay: 'any' }
    },
    {
      indicatorId: createdIndicators[0].id,
      methodologyId: createdMethodologies[1].id, // UpToDate
      ageGroupMin: 18,
      ageGroupMax: 60,
      gender: 'male',
      minValue: 135,
      maxValue: 175,
      optimalMin: 140,
      optimalMax: 160,
      criticalLow: 80,
      criticalHigh: 200,
      note: 'UpToDate reference ranges for adult males',
      conditions: { fasting: false, timeOfDay: 'any' }
    },
    // –†–µ—Ñ–µ—Ä–µ–Ω—Å–Ω—ã–µ –¥–∏–∞–ø–∞–∑–æ–Ω—ã –¥–ª—è –≥–ª—é–∫–æ–∑—ã
    {
      indicatorId: createdIndicators[3].id,
      methodologyId: createdMethodologies[0].id, // –ú–∏–Ω–∑–¥—Ä–∞–≤ –†–§
      ageGroupMin: 18,
      ageGroupMax: 60,
      gender: 'all',
      minValue: 3.9,
      maxValue: 6.1,
      optimalMin: 4.1,
      optimalMax: 5.9,
      criticalLow: 2.8,
      criticalHigh: 11.1,
      note: '–ù–æ—Ä–º–∞ –≥–ª—é–∫–æ–∑—ã –Ω–∞—Ç–æ—â–∞–∫ –ø–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º –ú–∏–Ω–∑–¥—Ä–∞–≤–∞ –†–§',
      conditions: { fasting: true, timeOfDay: 'morning' }
    },
    {
      indicatorId: createdIndicators[3].id,
      methodologyId: createdMethodologies[1].id, // UpToDate
      ageGroupMin: 18,
      ageGroupMax: 60,
      gender: 'all',
      minValue: 3.9,
      maxValue: 5.6,
      optimalMin: 4.0,
      optimalMax: 5.5,
      criticalLow: 2.8,
      criticalHigh: 11.1,
      note: 'UpToDate fasting glucose reference ranges',
      conditions: { fasting: true, timeOfDay: 'morning' }
    }
  ];

  console.log('üìè –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–µ–Ω—Å–Ω—ã—Ö –¥–∏–∞–ø–∞–∑–æ–Ω–æ–≤...');
  for (const range of referenceRanges) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω
    const existing = await prisma.referenceRange.findFirst({
      where: {
        indicatorId: range.indicatorId,
        methodologyId: range.methodologyId,
        gender: range.gender,
        ageGroupMin: range.ageGroupMin,
        ageGroupMax: range.ageGroupMax
      }
    });
    
    if (existing) {
      await prisma.referenceRange.update({
        where: { id: existing.id },
        data: range
      });
    } else {
      await prisma.referenceRange.create({
        data: range
      });
    }
    console.log(`‚úÖ –†–µ—Ñ–µ—Ä–µ–Ω—Å–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω —Å–æ–∑–¥–∞–Ω`);
  }

  console.log('üéâ –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ —Å –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–º–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º–∏!');
  console.log(`üìä –°–æ–∑–¥–∞–Ω–æ:`);
  console.log(`   - ${createdMethodologies.length} –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏–π`);
  console.log(`   - ${createdStudyTypes.length} —Ç–∏–ø–æ–≤ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π`);
  console.log(`   - ${createdIndicators.length} –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π`);
  console.log(`   - ${referenceRanges.length} —Ä–µ—Ñ–µ—Ä–µ–Ω—Å–Ω—ã—Ö –¥–∏–∞–ø–∞–∑–æ–Ω–æ–≤`);
}

main()
  .catch((e) => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π:', e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  });
