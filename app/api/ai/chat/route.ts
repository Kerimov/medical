import { NextRequest, NextResponse } from 'next/server'

// –í—Ä–µ–º–µ–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã AI (–ø–æ–∑–∂–µ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ OpenAI API –∏–ª–∏ –¥—Ä—É–≥–æ–π AI —Å–µ—Ä–≤–∏—Å)
const medicalResponses: { [key: string]: string } = {
  default: '–Ø –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç. –Ø –º–æ–≥—É –ø–æ–º–æ—á—å –≤–∞–º —Å:\n\n‚Ä¢ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è–º–∏ –æ –ø—Ä–∏–µ–º–µ –ª–µ–∫–∞—Ä—Å—Ç–≤\n‚Ä¢ –ó–∞–ø–∏—Å—å—é —Å–∏–º–ø—Ç–æ–º–æ–≤ –≤ –¥–Ω–µ–≤–Ω–∏–∫ –∑–¥–æ—Ä–æ–≤—å—è\n‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –≤–∏–∑–∏—Ç–∞—Ö –∫ –≤—Ä–∞—á—É\n‚Ä¢ –û–±—â–∏–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏ –æ –∑–¥–æ—Ä–æ–≤—å–µ\n\n–ß–µ–º —è –º–æ–≥—É –ø–æ–º–æ—á—å?',
  
  –ª–µ–∫–∞—Ä—Å—Ç–≤–æ: '–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –ª–µ–∫–∞—Ä—Å—Ç–≤–µ:\n1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª "–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è"\n2. –ù–∞–∂–º–∏—Ç–µ "–î–æ–±–∞–≤–∏—Ç—å –ª–µ–∫–∞—Ä—Å—Ç–≤–æ"\n3. –£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ, –¥–æ–∑–∏—Ä–æ–≤–∫—É –∏ –≤—Ä–µ–º—è –ø—Ä–∏–µ–º–∞\n\n–Ø –±—É–¥—É –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å –≤–∞–º –æ –ø—Ä–∏–µ–º–µ!',
  
  —Å–∏–º–ø—Ç–æ–º: '–ó–∞–ø–∏—Å—å —Å–∏–º–ø—Ç–æ–º–æ–≤ –ø–æ–º–æ–∂–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –≤–∞—à–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:\n1. –û—Ç–∫—Ä–æ–π—Ç–µ "–î–Ω–µ–≤–Ω–∏–∫ –∑–¥–æ—Ä–æ–≤—å—è"\n2. –ù–∞–∂–º–∏—Ç–µ "–ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å"\n3. –û–ø–∏—à–∏—Ç–µ —Å–∏–º–ø—Ç–æ–º—ã, –∏—Ö –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å\n\n–ï—Å–ª–∏ —Å–∏–º–ø—Ç–æ–º—ã —Å–µ—Ä—å–µ–∑–Ω—ã–µ - –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –≤—Ä–∞—á—É!',
  
  –≤—Ä–∞—á: '–î–ª—è –∑–∞–ø–∏—Å–∏ –∫ –≤—Ä–∞—á—É:\n1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ "–ó–∞–ø–∏—Å–∏ –∫ –≤—Ä–∞—á–∞–º"\n2. –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å\n3. –£–∫–∞–∂–∏—Ç–µ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è\n\n–Ø –Ω–∞–ø–æ–º–Ω—é –≤–∞–º –æ –ø—Ä–∏–µ–º–µ –∑–∞—Ä–∞–Ω–µ–µ.',
  
  –¥–∞–≤–ª–µ–Ω–∏–µ: '–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–∞–≤–ª–µ–Ω–∏—è –≤–∞–∂–µ–Ω –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è:\n‚Ä¢ –ù–æ—Ä–º–∞–ª—å–Ω–æ–µ: 120/80 –º–º —Ä—Ç. —Å—Ç.\n‚Ä¢ –ò–∑–º–µ—Ä—è–π—Ç–µ –≤ —Å–ø–æ–∫–æ–π–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏\n‚Ä¢ –ó–∞–ø–∏—Å—ã–≤–∞–π—Ç–µ –ø–æ–∫–∞–∑–∞–Ω–∏—è –≤ –¥–Ω–µ–≤–Ω–∏–∫\n\n–ü—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è—Ö - –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–π—Ç–µ—Å—å —Å –≤—Ä–∞—á–æ–º.',
  
  –∞–Ω–∞–ª–∏–∑: '–•—Ä–∞–Ω–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–æ–≤ –≤ —Ä–∞–∑–¥–µ–ª–µ "–î–æ–∫—É–º–µ–Ω—Ç—ã":\n1. –û—Ç–∫—Ä–æ–π—Ç–µ —Ä–∞–∑–¥–µ–ª "–î–æ–∫—É–º–µ–Ω—Ç—ã"\n2. –ù–∞–∂–º–∏—Ç–µ "–ó–∞–≥—Ä—É–∑–∏—Ç—å"\n3. –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –∏–ª–∏ —Å–¥–µ–ª–∞–π—Ç–µ —Ñ–æ—Ç–æ\n\n–í—Å–µ –∞–Ω–∞–ª–∏–∑—ã –±—É–¥—É—Ç –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ!',
}

function getAIResponse(message: string): string {
  const lowerMessage = message.toLowerCase()
  
  // –ü—Ä–æ—Å—Ç–æ–µ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
  for (const [key, response] of Object.entries(medicalResponses)) {
    if (key !== 'default' && lowerMessage.includes(key)) {
      return response
    }
  }
  
  // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
  if (lowerMessage.match(/–ø—Ä–∏–≤–µ—Ç|–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π|–¥–æ–±—Ä—ã–π –¥–µ–Ω—å|–¥–æ–±—Ä–æ–µ —É—Ç—Ä–æ|–¥–æ–±—Ä—ã–π –≤–µ—á–µ—Ä/)) {
    return '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! üëã –Ø –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç. –ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å –≤–∞–º –∑–∞–±–æ—Ç–∏—Ç—å—Å—è –æ –∑–¥–æ—Ä–æ–≤—å–µ. –ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?'
  }
  
  // –ü–æ–º–æ—â—å
  if (lowerMessage.match(/–ø–æ–º–æ—â—å|–ø–æ–º–æ–≥–∏|—á—Ç–æ —Ç—ã —É–º–µ–µ—à—å|–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏/)) {
    return medicalResponses.default
  }
  
  // –ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å
  if (lowerMessage.match(/—Å–ø–∞—Å–∏–±–æ|–±–ª–∞–≥–æ–¥–∞—Ä—é/)) {
    return '–í—Å–µ–≥–¥–∞ —Ä–∞–¥ –ø–æ–º–æ—á—å! üòä –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –µ—â–µ –≤–æ–ø—Ä–æ—Å—ã - –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å.'
  }
  
  // –í–æ–ø—Ä–æ—Å—ã –æ –∑–¥–æ—Ä–æ–≤—å–µ
  if (lowerMessage.match(/–±–æ–ª–∏—Ç|–±–æ–ª—å|–ø–ª–æ—Ö–æ|—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞|–∫–∞—à–µ–ª—å|–Ω–∞—Å–º–æ—Ä–∫/)) {
    return '–Ø –≤–∏–∂—É, —á—Ç–æ –≤–∞—Å –±–µ—Å–ø–æ–∫–æ–∏—Ç —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ. –†–µ–∫–æ–º–µ–Ω–¥—É—é:\n\n1. –ó–∞–ø–∏—Å–∞—Ç—å —Å–∏–º–ø—Ç–æ–º—ã –≤ –¥–Ω–µ–≤–Ω–∏–∫ –∑–¥–æ—Ä–æ–≤—å—è\n2. –ò–∑–º–µ—Ä–∏—Ç—å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É\n3. –ï—Å–ª–∏ —Å–∏–º–ø—Ç–æ–º—ã —Å–µ—Ä—å–µ–∑–Ω—ã–µ - –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –≤—Ä–∞—á—É\n\n‚ö†Ô∏è –ü—Ä–∏ –æ—Å—Ç—Ä—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏—è—Ö –≤—ã–∑—ã–≤–∞–π—Ç–µ —Å–∫–æ—Ä—É—é –ø–æ–º–æ—â—å!'
  }
  
  // –ü—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∞
  if (lowerMessage.match(/–ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∞|–∫–∞–∫ –±—ã—Ç—å –∑–¥–æ—Ä–æ–≤—ã–º|—Å–æ–≤–µ—Ç—ã/)) {
    return '–û—Å–Ω–æ–≤—ã –∑–¥–æ—Ä–æ–≤–æ–≥–æ –æ–±—Ä–∞–∑–∞ –∂–∏–∑–Ω–∏:\n\n‚Ä¢ –†–µ–≥—É–ª—è—Ä–Ω–∞—è —Ñ–∏–∑–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å\n‚Ä¢ –°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ\n‚Ä¢ –î–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–π —Å–æ–Ω (7-8 —á–∞—Å–æ–≤)\n‚Ä¢ –ö–æ–Ω—Ç—Ä–æ–ª—å —Å—Ç—Ä–µ—Å—Å–∞\n‚Ä¢ –†–µ–≥—É–ª—è—Ä–Ω—ã–µ –º–µ–¥–æ—Å–º–æ—Ç—Ä—ã\n‚Ä¢ –ü—Ä–∏–µ–º –≤–∏—Ç–∞–º–∏–Ω–æ–≤ (–ø–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—é –≤—Ä–∞—á–∞)\n\n–ó–∞–ø–∏—Å—ã–≤–∞–π—Ç–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –∑–¥–æ—Ä–æ–≤—å—è –≤ –¥–Ω–µ–≤–Ω–∏–∫!'
  }
  
  // –ê–ø—Ç–µ–∫–∞
  if (lowerMessage.match(/–∞–ø—Ç–µ–∫–∞|–∫—É–ø–∏—Ç—å|–∑–∞–∫–∞–∑–∞—Ç—å/)) {
    return '–§—É–Ω–∫—Ü–∏—è –∑–∞–∫–∞–∑–∞ –ª–µ–∫–∞—Ä—Å—Ç–≤ –∏–∑ –∞–ø—Ç–µ–∫–∏ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö! üíä\n\n–ü–æ–∫–∞ –≤—ã –º–æ–∂–µ—Ç–µ:\n‚Ä¢ –í–µ—Å—Ç–∏ —Å–ø–∏—Å–æ–∫ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ª–µ–∫–∞—Ä—Å—Ç–≤\n‚Ä¢ –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –ø–æ–∫—É–ø–∫–µ\n‚Ä¢ –•—Ä–∞–Ω–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç—ã –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ö'
  }
  
  // –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ —Å–ª—É—á–∞–∏
  if (lowerMessage.match(/—Å–∫–æ—Ä–∞—è|—ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ|—Å—Ä–æ—á–Ω–æ|—É–º–∏—Ä–∞—é|—Å–µ—Ä–¥—Ü–µ –æ—Å—Ç–∞–Ω–æ–≤/)) {
    return 'üö® –≠–ö–°–¢–†–ï–ù–ù–ê–Ø –°–ò–¢–£–ê–¶–ò–Ø:\n\n‚òéÔ∏è –í—ã–∑–æ–≤–∏—Ç–µ —Å–∫–æ—Ä—É—é –ø–æ–º–æ—â—å: 103 –∏–ª–∏ 112\n\n–ü—Ä–∏ —Å–µ—Ä–¥–µ—á–Ω–æ–º –ø—Ä–∏—Å—Ç—É–ø–µ:\n1. –í—ã–∑–æ–≤–∏—Ç–µ —Å–∫–æ—Ä—É—é\n2. –ü—Ä–∏–º–∏—Ç–µ –Ω–∏—Ç—Ä–æ–≥–ª–∏—Ü–µ—Ä–∏–Ω (–µ—Å–ª–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω)\n3. –°—è–¥—å—Ç–µ –∏–ª–∏ –ª—è–≥—Ç–µ\n4. –ù–µ –ø–∞–Ω–∏–∫—É–π—Ç–µ\n\n–ü–æ–º–æ—â—å —É–∂–µ –≤ –ø—É—Ç–∏!'
  }
  
  // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
  return `–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å. –Ø —Å—Ç–∞—Ä–∞—é—Å—å –ø–æ–º–æ—á—å —Å –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏.\n\n–í—ã —Å–ø—Ä–æ—Å–∏–ª–∏: "${message}"\n\n–ú–æ–≥—É –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å:\n‚Ä¢ –ó–∞–ø–∏—Å–∞—Ç—å —ç—Ç–æ –≤ –¥–Ω–µ–≤–Ω–∏–∫ –∑–¥–æ—Ä–æ–≤—å—è\n‚Ä¢ –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ\n‚Ä¢ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –∫ –≤—Ä–∞—á—É –¥–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏\n\n–ß—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å?`
}

export async function POST(request: NextRequest) {
  try {
    const { message, history } = await request.json()

    if (!message || typeof message !== 'string') {
      return NextResponse.json(
        { error: '–°–æ–æ–±—â–µ–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ' },
        { status: 400 }
      )
    }

    // –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç AI
    const response = getAIResponse(message)

    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å OpenAI API:
    /*
    const openai = new OpenAI({
      apiKey: process.env.OPENAI_API_KEY
    })
    
    const completion = await openai.chat.completions.create({
      model: "gpt-4",
      messages: [
        {
          role: "system",
          content: "–¢—ã –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç. –ü–æ–º–æ–≥–∞–µ—à—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —É–ø—Ä–∞–≤–ª—è—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ–º..."
        },
        ...history.map(msg => ({
          role: msg.role,
          content: msg.content
        })),
        { role: "user", content: message }
      ]
    })
    
    const response = completion.choices[0].message.content
    */

    return NextResponse.json({
      response,
      timestamp: new Date().toISOString()
    })

  } catch (error) {
    console.error('AI Chat error:', error)
    return NextResponse.json(
      { error: '–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è' },
      { status: 500 }
    )
  }
}

