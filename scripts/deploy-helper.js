#!/usr/bin/env node

/**
 * –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –Ω–∞ Vercel
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node scripts/deploy-helper.js
 */

const readline = require('readline');
const { execSync } = require('child_process');
const crypto = require('crypto');

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

function question(query) {
  return new Promise(resolve => rl.question(query, resolve));
}

function generateJWTSecret() {
  return crypto.randomBytes(32).toString('hex');
}

function runCommand(command, description) {
  console.log(`\nüîß ${description}...`);
  try {
    execSync(command, { stdio: 'inherit' });
    console.log(`‚úÖ ${description} –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!`);
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ ${description.toLowerCase()}:`, error.message);
    return false;
  }
  return true;
}

async function main() {
  console.log('üöÄ –ü–æ–º–æ—â–Ω–∏–∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –Ω–∞ Vercel');
  console.log('=====================================\n');

  // –®–∞–≥ 1: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è JWT —Å–µ–∫—Ä–µ—Ç–∞
  console.log('üìã –®–∞–≥ 1: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è JWT —Å–µ–∫—Ä–µ—Ç–∞');
  const jwtSecret = generateJWTSecret();
  console.log(`–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π JWT_SECRET: ${jwtSecret}`);
  console.log('‚ö†Ô∏è  –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —ç—Ç–æ—Ç –∫–ª—é—á! –û–Ω –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Vercel\n');

  // –®–∞–≥ 2: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
  console.log('üìã –®–∞–≥ 2: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è');
  const proceed = await question('–í—ã–ø–æ–ª–Ω–∏—Ç—å git add, commit –∏ push? (y/n): ');
  
  if (proceed.toLowerCase() === 'y') {
    if (!runCommand('git add .', '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –≤ git')) return;
    if (!runCommand('git commit -m "Ready for Vercel deployment"', '–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞')) return;
    if (!runCommand('git push origin main', '–û—Ç–ø—Ä–∞–≤–∫–∞ –≤ GitHub')) return;
  }

  // –®–∞–≥ 3: –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è Vercel
  console.log('\nüìã –®–∞–≥ 3: –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ Vercel');
  console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ: https://vercel.com/new');
  console.log('2. –ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: https://github.com/Kerimov/medical.git');
  console.log('3. –ù–∞–∂–º–∏—Ç–µ "Import" –∏ —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º\n');

  // –®–∞–≥ 4: –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
  console.log('üìã –®–∞–≥ 4: –°–æ–∑–¥–∞–Ω–∏–µ PostgreSQL –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö');
  console.log('1. –í –ø–∞–Ω–µ–ª–∏ Vercel –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ "Storage"');
  console.log('2. –ù–∞–∂–º–∏—Ç–µ "Create Database" ‚Üí "Postgres"');
  console.log('3. –í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞–Ω "Hobby" (–±–µ—Å–ø–ª–∞—Ç–Ω—ã–π)');
  console.log('4. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ DATABASE_URL –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö\n');

  // –®–∞–≥ 5: –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
  console.log('üìã –®–∞–≥ 5: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
  console.log('–í Vercel ‚Üí Settings ‚Üí Environment Variables –¥–æ–±–∞–≤—å—Ç–µ:');
  console.log('');
  console.log('JWT_SECRET =', jwtSecret);
  console.log('DATABASE_URL = [–∏–∑ —à–∞–≥–∞ 4]');
  console.log('NEXT_PUBLIC_ADMIN_EMAILS = admin@example.com');
  console.log('OPENAI_API_KEY = [–≤–∞—à OpenAI –∫–ª—é—á]');
  console.log('OCR_SPACE_API_KEY = [–≤–∞—à OCR –∫–ª—é—á] (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)');
  console.log('NEXTAUTH_URL = https://medical-xxx.vercel.app');
  console.log('');

  // –®–∞–≥ 6: –ú–∏–≥—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
  console.log('üìã –®–∞–≥ 6: –ú–∏–≥—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö');
  const migrate = await question('–í—ã–ø–æ–ª–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö? (y/n): ');
  
  if (migrate.toLowerCase() === 'y') {
    console.log('\nüîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Vercel CLI...');
    try {
      execSync('npm install -g vercel', { stdio: 'inherit' });
    } catch (error) {
      console.log('‚ö†Ô∏è  Vercel CLI —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞');
    }

    console.log('\nüîß –í—Ö–æ–¥ –≤ Vercel...');
    console.log('–°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –≤ –±—Ä–∞—É–∑–µ—Ä–µ –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –∞–∫–∫–∞—É–Ω—Ç');
    try {
      execSync('vercel login', { stdio: 'inherit' });
    } catch (error) {
      console.log('‚ö†Ô∏è  –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞ –≤ Vercel. –í—ã–ø–æ–ª–Ω–∏—Ç–µ: vercel login');
    }

    console.log('\nüîß –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏...');
    try {
      execSync('npx prisma migrate deploy', { stdio: 'inherit' });
      console.log('‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ DATABASE_URL');
    }
  }

  // –§–∏–Ω–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
  console.log('\nüéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
  console.log('=====================================');
  console.log('1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ø–∞–Ω–µ–ª—å Vercel');
  console.log('2. –ù–∞–π–¥–∏—Ç–µ –≤–∞—à –ø—Ä–æ–µ–∫—Ç –∏ –æ—Ç–∫—Ä–æ–π—Ç–µ –µ–≥–æ');
  console.log('3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ URL –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è');
  console.log('4. –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ');
  console.log('5. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∏ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏');
  console.log('');
  console.log('üìö –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:');
  console.log('- DEPLOY_SCRIPT.md - –ø–æ–¥—Ä–æ–±–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏');
  console.log('- VERCEL_DEPLOYMENT_GUIDE.md - –ø–æ–ª–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ');
  console.log('- QUICK_DEPLOY_VERCEL.md - –±—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç');

  rl.close();
}

if (require.main === module) {
  main().catch(console.error);
}

module.exports = { generateJWTSecret };
